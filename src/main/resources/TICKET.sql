FUNCTION GET_APPLICATION_STRICT_FILES (PTICKET_ID IN NUMBER, PAPP_TYPE IN VARCHAR2, PPROC_REF IN CHAR, PSTATE IN CHAR,PBANK in varchar2)
RETURN SYS_REFCURSOR AS P_CURSOR SYS_REFCURSOR;

CURSOR C_TEMP IS SELECT T.TICKET_ID FROM APPLICATIONS.APP_TICKETS T
WHERE (PTICKET_ID IS NOT NULL AND T.TICKET_ID = PTICKET_ID AND T.BANK = PBANK OR PTICKET_ID IS NULL AND PPROC_REF IS NOT NULL AND T.PROC_REF = PPROC_REF)
AND (PAPP_TYPE OR T.TYPE = PAPP_TYPE);
TICKET_ID NUMBER;
BEGIN

    OPEN C_TEMP;
    FETCH C_TEMP INTO TICKET_ID;

    IF(C_TEMP%FOUND) THEN
        OPEN P_CURSOR FOR
            WITH count_files AS (
                SELECT TICKET_ID, COUNT(TICKET_ID) PAGE_CNT FROM APPLICATIONS.APP_FILES WHERE PTICKET_ID IS NOT NULL AND TICKET_ID = PTICKET_ID AND BANK = PBANK
                GROUP BY TICKET_ID)
                SELECT T.SOURCE ,T.TICKET_ID, T.ATTRIBUTES, PROC_REF, TYPE, LDAP_MOD, CUST_ID, DATE_CR, DATE_MOD, NVL(cf.PAGE_CNT, 0) PAGE_CNT, STATE, VAL_STATUS, CASE WHEN cf.PAGE_CNT IS NULL OR cf.PAGE_CNT = 0 THEN 'N' ELSE 'Y' END AS HAS_SCAN
                    FROM APPLICATIONS.APP_TICKETS T LEFT OUTER JOIN count_files cf ON cf.TICKET_ID = T.TICKET_ID
                    WHERE (PTICKET_ID IS NOT NULL AND T.TICKET_ID = PTICKET_ID AND T.BANK = PBANK OR PTICKET_ID IS NULL AND PPROC_REF IS NOT NULL AND T.PROC_REF = PPROC_REF) AND (PAPP_TYPE IS NULL OR T.TYPE = PAPP_TYPE) AND (PSTATE IS NULL OR T.STATE = PSTATE);
                CLOSE C_TEMP;
                RETURN P_CURSOR;
    ELSE
        OPEN P_CURSOR FOR
            SELECT 'CASH' AS SOURCE, CASH.TICKET_ID, CASH.ATTRIBUTES, PROC_REF, CASH.TYPE, CASH.LDAP_MOD, CASH.CUST_ID, CASH.DATE_CR, CASH.DATE_MOD, NVL((SELECT MAX(ROWNUM) FROM APPLICATIONS.CXP_FILES WHERE TICKET_ID = CASH.TICKET_ID AND BANK = PBANK AND PROC_REF = CASH.PROC_REF), 0) PAGE_CNT, 'C' AS STATE, CASH.VAL_STATUS, CASH.HAS_SCAN
                FROM APPLICATIONS.CXP_TICKETS CASH
                WHERE PTICKET_ID IS NOT NULL AND CASH.TICKET_ID = PTICKET_ID AND CASH.BANK = PBANK AND (PPROC_REF IS NOT NULL OR CASH.PROC_REF = PPROC_REF);
            CLOSE C_TEMP;
            RETURN P_CURSOR;
    END IF;
END;
